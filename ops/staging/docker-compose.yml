version: "3.7"

services:
  api:
    container_name: staging_combined
    build:
      context: ../../src/
      dockerfile: combined/Dockerfile
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/health"]
      interval: 5s
      timeout: 10s
      retries: 15
    volumes:
      - assets:/app/wwwroot/assets
    environment:
      - SwaggerBasePath=aspen
      - ASPEN_CONNECTION_STRING=server=api_db;user id=aspen; password=password; database=aspen;    
    networks:
      shared:
      api:
    restart: unless-stopped
    depends_on:
      api_db:
        condition: service_healthy

  api_db:
    image: postgres
    container_name: staging_api_db
    volumes:
      - api_db:/var/lib/postgresql/data
      - ../../dev-resources/api/backup.sql:/docker-entrypoint-initdb.d/backup.sql
    environment:
      POSTGRES_DB: aspen
      POSTGRES_USER: aspen
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 1s
      retries: 5
    restart: unless-stopped
    networks:
      api:

  keycloak:
    container_name: staging_keycloak
    build:
      context: ../../dev-resources/keycloak
    environment:
      - KEYCLOAK_WELCOME_THEME=aspen
      - DB_VENDOR=POSTGRES
      - DB_ADDR=keycloak_db
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_SCHEMA=public
      - DB_PASSWORD=password
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - PROXY_ADDRESS_FORWARDING=true
      - KEYCLOAK_FRONTEND_URL=https://engineering.snow.edu/aspen/auth
    healthcheck:
      # test: ["CMD", "curl", "-f", "http://localhost:8080/aspen/auth/resources/vc52l/welcome/keycloak/img/favicon.ico"]
      test: ["CMD", "curl", "-f", "http://localhost:8080/aspen/auth/welcome-content/bug.png"]
      interval: 3s
      timeout: 1s
      retries: 15
    networks:
      shared:
      keycloak:
      proxy:
    restart: unless-stopped
    depends_on:
      keycloak_db:
        condition: service_healthy

  keycloak_db:
    image: postgres
    container_name: staging_keycloak_db
    volumes:
      - keycloak_db:/var/lib/postgresql/data
      - ../../dev-resources/keycloak/backup.sql:/docker-entrypoint-initdb.d/backup.sql
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      PROXY_ADDRESS_FORWARDING: "true"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 3s
      timeout: 1s
      retries: 15    
    restart: unless-stopped
    networks:
      keycloak:

  reverse_proxy:
    build:
      context: ../../
      dockerfile: ops/staging/reverse-proxy/Dockerfile
    container_name: staging_reverse_proxy
    volumes:
      - assets:/assets
      - ./reverse-proxy/errorpages:/usr/share/nginx/errorpages/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/aspen/index.html"]
      interval: 3s
      timeout: 1s
      retries: 5
    networks:
      shared:
      proxy:
    restart: unless-stopped
    depends_on:
      keycloak:
        condition: service_healthy
      api:
        condition: service_healthy

volumes:
  keycloak_db:
  api_db:
  assets:
  home:

networks:
  shared:
  keycloak:
  api:
  proxy:
    external: true
