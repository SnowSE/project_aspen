version: "3.7"

services:
  editor:
    container_name: editor
    build:
      context: .
    volumes:
      - home:/root
      - ../../:/aspen
    environment:
      ASPEN_TEST_CONNECTION_STRING: Server=api_db;Database=aspen;User Id=aspen;Password=password;
    networks:
      shared:
      api:
    depends_on:
      api_db:
        condition: service_healthy

  web:
    container_name: web
    build:
      context: ../
      dockerfile: web/dev.Dockerfile
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 5s
      timeout: 30s
      retries: 50
    networks:
      shared:
    volumes:
      - ../:/src

  api:
    container_name: api
    build:
      dockerfile: api/dev.Dockerfile
      context: ../
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 5s
      timeout: 10s
      retries: 15
    volumes:
      - assets:/assets
      - ../:/src
    environment:
      ASPEN_TEST_CONNECTION_STRING: Server=api_db;Database=aspen;User Id=aspen;Password=password;
      DOTNET_WATCH_RESTART_ON_RUDE_EDIT: true
      SwaggerBasePath: aspen
    networks:
      shared:
      api:
    depends_on:
      api_db:
        condition: service_healthy

  api_db:
    image: postgres
    container_name: api_db
    volumes:
      - api_db:/var/lib/postgresql/data
      # - ../../dev-resources/api/backup.sql:/docker-entrypoint-initdb.d/backup.sql
    environment:
      POSTGRES_DB: aspen
      POSTGRES_USER: aspen
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 1s
      retries: 5
    networks:
      api:

  keycloak:
    container_name: keycloak
    build:
      context: ../../dev-resources/keycloak
      dockerfile: ../../dev-resources/keycloak/dev.Dockerfile
    volumes:
      - ../../dev-resources/keycloak/themes/aspen:/opt/jboss/keycloak/themes/aspen
    environment:
      - KEYCLOAK_WELCOME_THEME=aspen
      - DB_VENDOR=POSTGRES
      - DB_ADDR=keycloak_db
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_SCHEMA=public
      - DB_PASSWORD=password
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - PROXY_ADDRESS_FORWARDING=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/"]
      interval: 3s
      timeout: 1s
      retries: 15
    networks:
      shared:
      keycloak:
    depends_on:
      keycloak_db:
        condition: service_healthy

  keycloak_db:
    image: postgres
    container_name: keycloak_db
    volumes:
      - keycloak_db:/var/lib/postgresql/data
      - ../../dev-resources/keycloak/backup.sql:/docker-entrypoint-initdb.d/backup.sql
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 3s
      timeout: 1s
      retries: 15
    networks:
      keycloak:

  reverse_proxy:
    build:
      context: ../../dev-resources/reverse-proxy
    container_name: reverse_proxy
    volumes:
      - ../../dev-resources/reverse-proxy/default.conf:/etc/nginx/conf.d/default.conf
      - ../../dev-resources/reverse-proxy/errorpages:/usr/share/nginx/errorpages/
      - assets:/assets
    ports:
      - 80:80
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/50x.html"]
      interval: 3s
      timeout: 1s
      retries: 5
    networks:
      shared:
    depends_on:
      keycloak:
        condition: service_healthy
      api:
        condition: service_healthy
      web:
        condition: service_healthy

volumes:
  keycloak_db:
  api_db:
  assets:
  home:

networks:
  shared:
  keycloak:
  api:
